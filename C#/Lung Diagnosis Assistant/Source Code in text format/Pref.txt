using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using MahApps.Metro;
using MahApps.Metro.Controls;
using System.Net;
using System.Net.Mail;
using System.IO;



namespace metrowin
{
    /// <summary>
    /// Interaction logic for pref.xaml
    /// </summary>
    public partial class pref : MetroWindow
    {
        private static String smtpAddress = "smtp.mail.yahoo.com";
        private static int portNumber = 587;
        private static bool enableSSL = true;
        private static string emailFrom = "lungdiagnosisassistant@yahoo.com";
        private static string password = "sdslmkpksdslmkpk";
        
        private static string emailTo = "";
        public static string subject = "Patient Database Update";
        public static string body ;
        

        public pref()
        {
            InitializeComponent();
        }



        public static void sendmail()
        {
            StreamReader fr = new StreamReader("dest.txt");
            if (fr!=null)
            {
                emailTo = fr.ReadLine();
                fr.Close();
                
                try
                {
                    using (MailMessage mail = new MailMessage())
                    {
                        mail.From = new MailAddress(emailFrom);
                        mail.To.Add(emailTo);
                        mail.Subject = subject;
                        mail.Body = body;
                        mail.IsBodyHtml = true;
                        // Can set to false, if you are sending pure text.

                        mail.Attachments.Add(new Attachment("mailbody.txt"));
                        // mail.Attachments.Add(new Attachment("C:\\SomeZip.zip"));
                        smtpAddress = "smtp.mail.yahoo.com";
                        using (SmtpClient smtp = new SmtpClient(smtpAddress, portNumber))
                        {
                            smtp.Credentials = new NetworkCredential(emailFrom, password);
                            smtp.EnableSsl = enableSSL;
                            smtp.Send(mail);
                        }

                    }
                }
                catch { MessageBox.Show("Email Sending Failed.Please Check your internet connection"); }

            }
            else
            {
                MessageBox.Show("Doctor's Mail ID not set!\r\nPlease use the preferences option to set it.");
            }
        }
        

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            bool invflag = false;
            emailTo = mailtext.Text.ToString();
            using (StreamWriter f = new StreamWriter("dest.txt"))
            {
                f.Write(emailTo);

                f.Close();                

            }
            
            
            if (!emailTo.Contains("@"))
                invflag = true;
            if (!emailTo.Contains("."))
                invflag = true;
            if(invflag==true)
                MessageBox.Show("Invalid mail id");
        }

        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            this.Close();
        }

        private void gdone_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }

        private void gapply_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Window1.gpath = gpathinp.Text.ToString();
                System.IO.StreamWriter f = new StreamWriter("gpath.txt", false);
                f.Write(Window1.gpath);
                f.Close();
                f.Dispose();


            }
            catch { MessageBox.Show("Unable to store path!\r\nPlease try again"); }
        }
    }
}
